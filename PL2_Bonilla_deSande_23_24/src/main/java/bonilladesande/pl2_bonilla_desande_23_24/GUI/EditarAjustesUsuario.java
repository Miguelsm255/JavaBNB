/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bonilladesande.pl2_bonilla_desande_23_24.GUI;

import bonilladesande.pl2_bonilla_desande_23_24.Anfitrion;
import bonilladesande.pl2_bonilla_desande_23_24.BaseDatos;
import bonilladesande.pl2_bonilla_desande_23_24.BibliotecaExcepciones;
import bonilladesande.pl2_bonilla_desande_23_24.Particular;
import bonilladesande.pl2_bonilla_desande_23_24.TextPrompt;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author marco
 */
public class EditarAjustesUsuario extends javax.swing.JFrame {

    /**
     * Creates new form EditarAjustesUsuario
     */
    /*AL IGUAL QUE EN EL APARTADO DE CREAR CUENTA, AQUÍ TAMBIÉN UTILIZAREMOS UN CÓDIGO EXTERNO PARA USAR PLACEHOLDERS,
    PERO EN ESTE CASO, EN VEZ DE MOSTRAR UN FORMATO, MOSTRARÁN LA INFORMACIÓN QUE TIENE EL USUARIO POR DEFECTO, ES DECIR, 
    AQUELLA QUE INTRODUJO EN EL MOMENTO DE CREAR SU CUENTA Y AQUELLA QUE HIPOTÉTICAMENTE ESTÁ INTENTANDO CAMBIAR. ADEMÁS
    HAY DOS FUNCIONES MÁS QUE PONEN DE COLOR ROJO DOS COSAS: OTRO LABEL OCULTO SIMILAR AL DEL APARTADO "CREAR CUENTA"
    QUE TAMBIÉN ADVERTIRÁ SI EL USUARIO COMETE UN ERROR, Y EL BOTÓN DE ELIMINAR USUARIO, QUE BORRARÁ LA CUENTA DEL USUARIO 
    DE LA BASE DE DATOS.*/
    public EditarAjustesUsuario() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        TextPrompt placenuevouser = new TextPrompt(BaseDatos.user.getNombre(), nuevoUser);
        TextPrompt placenuevoemail = new TextPrompt(BaseDatos.user.getCorreo(), nuevoCorreo);
        TextPrompt placenuevacontraseña = new TextPrompt(BaseDatos.user.getClave(), nuevaContra);
        TextPrompt placenuevotelefono = new TextPrompt(String.valueOf(BaseDatos.user.getTelefono()), nuevoTelef);
        
        if (BaseDatos.user.getTipo() == 1){
            serVip.setSelected(BaseDatos.user.isVip());
            serVip.setVisible(true);
        }
        else{
            serVip.setVisible(false);
        }
        
        edicionliada.setForeground(Color.RED);
        EliminarUsuario.setForeground(Color.RED);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nuevoUser = new javax.swing.JTextField();
        nuevoCorreo = new javax.swing.JTextField();
        nuevoTelef = new javax.swing.JTextField();
        GuardarCambios = new javax.swing.JButton();
        CancelarAjustes = new javax.swing.JButton();
        nuevaContra = new javax.swing.JPasswordField();
        edicionliada = new javax.swing.JLabel();
        EliminarUsuario = new javax.swing.JButton();
        serVip = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("¡Esta es la pestaña para realizar Ajustes de Usuario!");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Nombre de Usuario:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Contraseña:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Correo Electrónico:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Teléfono:");

        nuevoUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoUserActionPerformed(evt);
            }
        });

        nuevoCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoCorreoActionPerformed(evt);
            }
        });

        nuevoTelef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoTelefActionPerformed(evt);
            }
        });

        GuardarCambios.setText("Guardar Cambios");
        GuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarCambiosActionPerformed(evt);
            }
        });

        CancelarAjustes.setText("Cancelar");
        CancelarAjustes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarAjustesActionPerformed(evt);
            }
        });

        EliminarUsuario.setText("ELIMINAR USUARIO");
        EliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarUsuarioActionPerformed(evt);
            }
        });

        serVip.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        serVip.setText("¿Eres usuario VIP?");
        serVip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serVipActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(EliminarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GuardarCambios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CancelarAjustes)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(edicionliada, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(nuevoCorreo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                                        .addComponent(nuevoUser, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nuevaContra, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nuevoTelef, javax.swing.GroupLayout.Alignment.LEADING))))
                            .addComponent(serVip, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nuevoUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nuevaContra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoTelef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(serVip)
                .addGap(18, 18, 18)
                .addComponent(edicionliada, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GuardarCambios)
                    .addComponent(CancelarAjustes)
                    .addComponent(EliminarUsuario))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /** 
     * @param evt
     */
    //ESPACIO PARA QUE EL USUARIO INTRODUZCA SU NUEVO NOMBRE DE USUARIO.
    private void nuevoUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevoUserActionPerformed
    
    /** 
     * @param evt
     */
    /*ESPACIO PARA GUARDAR TODOS LOS CAMBIOS. TAMBIÉN TIRARÁ ERRORES SI ES OPORTUNO, Y LUEGO REEMPLAZARÁ LOS ESPACIOS
    MODIFICADOS POR EL USUARIO EN LA BASE DE DATOS. EN CASO DE NO ACTUALIZAR UNO DE LOS TEXTFIELDS, LO CUAL SÍ ES POSIBLE
    EN ESTA PESTAÑA, LA INFORMACIÓN SE MANTENDRÁ SIN ACTUALIZAR. ESTE ES UN MÉTODO DE SIMPLIFICAR LA INTERFAZ YA QUE 
    DE ESTA MANERA NO ES NECESARIO QUE EL USUARIO TENGA QUE ABRIR VARIAS VENTANAS DISTINTAS PARA CAMBIAR SUS ATRIBUTOS,
    PUEDE HACERLO TODO DE MANERA CÓMODA E INTUITIVA (GRACIAS AL APOYO DE LOS PLACEHOLDERS) DESDE UNA MISMA VENTANA.*/
    private void GuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarCambiosActionPerformed
        //SE INTENTA RECOGER TODA LA INFORMACIÓN DE LOS TEXTFIELDS PARA ACTUALIZAR LA BASE DE DATOS.
        try {

            String nuevoUsername = nuevoUser.getText();
            String nuevoEmail = nuevoCorreo.getText();
            char[] nuevaClave = nuevaContra.getPassword();
            String nuevaClaveString = new String(nuevaClave);
            int nuevoTelefono = Integer.parseInt(nuevoTelef.getText());
            int digitostelefononuevo = String.valueOf(nuevoTelefono).length();
            //SI EL TELÉFONO NO TIENE NUEVE CIFRAS, LANZA UN ERROR.
            if (digitostelefononuevo != 9) {
            throw new BibliotecaExcepciones.TelefonoEscacharrado("El teléfono debe de contener exactamente 9 dígitos");
        }
        else{
            
            if (!nuevoEmail.contains("@gmail.com")) {
                throw new BibliotecaExcepciones.EmailSinEmail("El email introducido no es válido.");
            }
            
            //SE GUARDA LA INFORMACIÓN EN LA BASE DE DATOS.
            if(BaseDatos.user.getTipo() == 1){
                
                Particular particular = new Particular(serVip.isSelected(), BaseDatos.particulares.get(BaseDatos.user.getPosicionArrayList()).getTarjeta(), BaseDatos.particulares.get(BaseDatos.user.getPosicionArrayList()).getDni(), nuevoUsername, nuevoEmail, nuevaClaveString, nuevoTelefono);
                for(int i = 0; i < BaseDatos.reservas.size(); i++){
                    if(BaseDatos.reservas.get(i).getParticular().getCorreo().equals(BaseDatos.user.getCorreo())){
                        BaseDatos.reservas.get(i).setParticular(particular);
                    }
                }
                
                BaseDatos.particulares.set(BaseDatos.user.getPosicionArrayList(), particular);
                BaseDatos.user.setVip(serVip.isSelected());
                
            }
            else{
                
                Anfitrion anfitrion = new Anfitrion(BaseDatos.user.getFechaRegistro(), BaseDatos.user.getDni(), nuevoUsername, nuevoEmail, nuevaClaveString, nuevoTelefono);
                anfitrion.setFoto(BaseDatos.anfitriones.get(BaseDatos.user.getPosicionArrayList()).getFoto());
                
                for(int i = 0; i < BaseDatos.inmuebles.size(); i++){
                    if(BaseDatos.inmuebles.get(i).getAnfitrion().getCorreo().equals(BaseDatos.anfitriones.get(BaseDatos.user.getPosicionArrayList()).getCorreo())){
                        BaseDatos.inmuebles.get(i).setAnfitrion(anfitrion);
                    }
                }
                
                for(int i = 0; i < BaseDatos.reservas.size(); i++){
                    if(BaseDatos.reservas.get(i).getInmueble().getAnfitrion().getCorreo().equals(BaseDatos.user.getCorreo())){
                        BaseDatos.reservas.get(i).getInmueble().setAnfitrion(anfitrion);
                    }
                }
                
                BaseDatos.anfitriones.set(BaseDatos.user.getPosicionArrayList(), anfitrion);
               
            }
            
            BaseDatos.user.setNombre(nuevoUsername);
            BaseDatos.user.setCorreo(nuevoEmail);
            BaseDatos.user.setTelefono(nuevoTelefono);
            BaseDatos.user.setClave(nuevaClaveString);
            
            
            //SE CAMBIA A LA VENTANA ANTETIOR.
            GestorVentanas.cambioVentana("EditarAjustesUsuario", "AjustesUsuario");
        }
    }   //RECIBE LAS EXCEPCIONES.
        catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Alguno de los formatos numéricos es erróneo.");
            edicionliada.setText("Por favor, revise todos los campos e inténtelo de nuevo.");
        } catch (BibliotecaExcepciones.EmailSinEmail
                | BibliotecaExcepciones.TelefonoEscacharrado e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            edicionliada.setText("Por favor, revise todos los campos e inténtelo de nuevo.");
        }
    }//GEN-LAST:event_GuardarCambiosActionPerformed
    
    /** 
     * @param JOptionPane.showConfirmDialog(this
     * @param usuario?"
     * @param "Confirmar"
     * @param JOptionPane.YES_NO_OPTION
     * @param JOptionPane.YES_OPTION
     */
    //SI SE PRESIONA EL BOTÓN DE CANCELAR, SE ENTIENDE QUE EL USUARIO NO QUIERE REALIZAR CAMBIOS Y SE CIERRA LA VENTANA.
    private void CancelarAjustesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarAjustesActionPerformed
        dispose();
    }//GEN-LAST:event_CancelarAjustesActionPerformed
    
    /** 
     * @param JOptionPane.showConfirmDialog(this
     * @param usuario?"
     * @param "Confirmar"
     * @param JOptionPane.YES_NO_OPTION
     * @param JOptionPane.YES_OPTION
     */
    //ESPACIO PARA QUE EL USUARIO INTRODUZCA SU NUEVO TELÉFONO
    private void nuevoTelefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoTelefActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevoTelefActionPerformed
    
    /** 
     * @param JOptionPane.showConfirmDialog(this
     * @param usuario?"
     * @param "Confirmar"
     * @param JOptionPane.YES_NO_OPTION
     * @param JOptionPane.YES_OPTION
     */
    //ESPACIO PARA QUE EL USUARIO INTRODUZCA SU NUEVO CORREO
    private void nuevoCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevoCorreoActionPerformed
    
    /** 
     * @param JOptionPane.showConfirmDialog(this
     * @param usuario?"
     * @param "Confirmar"
     * @param JOptionPane.YES_NO_OPTION
     * @param JOptionPane.YES_OPTION
     */
    //BOTÓN PARA ELIMINAR EL USUARIO ACTUAL, SE ABRIRÁ UN JPANEL CON LAS OPCIONES NECESARIAS PARA LLEVAR A CABO ESTE PROCESO.
    private void EliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarUsuarioActionPerformed

        int response = JOptionPane.showConfirmDialog(
                this,
                "¿Desea eliminar el usuario?",
                "Confirmar",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);

        //SI EL USUARIO RESPONDE QUE QUIERE SER ELIMINADO, SE RETIRARÁ SU INFORMACIÓN DE LA BASE DE DATOS.
        if (response == JOptionPane.YES_OPTION) {
            //SI ES UN PARTIICULAR, SE OPERARÁ DE LA SIGUIENTE MANERA.
            if (BaseDatos.user.getTipo() == 1) {
                for (int i = 0; i < BaseDatos.reservas.size(); i++){
                    if(BaseDatos.reservas.get(i).getParticular().getCorreo().equals(BaseDatos.user.getCorreo())){
                        BaseDatos.reservas.remove(i);
                    }
                }
                BaseDatos.particulares.remove(BaseDatos.user.getPosicionArrayList());
                //SI ES UN ANFITRIÓN EN CAMBIO, SE OPERARÁ DE LA SIGUIENTE MANERA.    
            } else {
                for (int i = 0; i < BaseDatos.reservas.size(); i++){
                    if(BaseDatos.reservas.get(i).getInmueble().getAnfitrion().getCorreo().equals(BaseDatos.user.getCorreo())){
                        BaseDatos.reservas.remove(i);
                    }
                }
                
                for (int i = 0; i < BaseDatos.inmuebles.size(); i++){
                    if(BaseDatos.inmuebles.get(i).getAnfitrion().getCorreo().equals(BaseDatos.user.getCorreo())){
                        BaseDatos.inmuebles.remove(i);
                    }
                }
                BaseDatos.anfitriones.remove(BaseDatos.user.getPosicionArrayList());
            }
            
            
            //DESPUÉS CAMBIA LA VENTANA, CIERRA LA VENTANA ACTUAL Y TE LLEVA A LA PÁGINA DE INICIO DE SESIÓN
            GestorVentanas.cambioVentana("EditarAjustesUsuario", "Login");
            GestorVentanas.gestorVentanas.ventanaJavaBNB.dispose();
            dispose();

        } //SI EL USUARIO RESPONDE QUE NO QUIERE SER ELIMINADO, EL JPANEL EN CUESTIÓN SE CIERRA.
        else if (response == JOptionPane.NO_OPTION) {
            dispose();

        }
    }//GEN-LAST:event_EliminarUsuarioActionPerformed

    
    /** 
     * @param args[]
     */
    private void serVipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serVipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serVipActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarAjustesUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarAjustesUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarAjustesUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarAjustesUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarAjustesUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelarAjustes;
    private javax.swing.JButton EliminarUsuario;
    private javax.swing.JButton GuardarCambios;
    private javax.swing.JLabel edicionliada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField nuevaContra;
    private javax.swing.JTextField nuevoCorreo;
    private javax.swing.JTextField nuevoTelef;
    private javax.swing.JTextField nuevoUser;
    private javax.swing.JCheckBox serVip;
    // End of variables declaration//GEN-END:variables
}
