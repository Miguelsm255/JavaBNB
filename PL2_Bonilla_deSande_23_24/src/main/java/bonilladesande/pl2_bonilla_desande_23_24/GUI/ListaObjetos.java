package bonilladesande.pl2_bonilla_desande_23_24.GUI;

import bonilladesande.pl2_bonilla_desande_23_24.*;
import java.awt.Component;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.border.EmptyBorder;

public final class ListaObjetos extends javax.swing.JPanel {

    public ListaObjetos(String tipo) {
        initComponents();
        myInitComponents(tipo);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 714, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void myInitComponents(String tipo) {

        //this.setSize(this.getWidth(), (125 * lista.size()));

        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        
        //setLayout(new GridBagLayout()); // Usar GridBagLayout para controlar el tamaño máximo
        //GridBagConstraints gbc = new GridBagConstraints();
        //gbc.gridx = 0;
        //gbc.gridy = 0;
        //gbc.fill = GridBagConstraints.HORIZONTAL;
        
        setBorder(new EmptyBorder(10, 10, 10, 10));
        
        if ("Inmuebles".equals(tipo)){
            
            ArrayList<Inmueble> listaInmuebles = BaseDatos.inmuebles;
            
            for (int i = 0; i < listaInmuebles.size(); i++) {
                Inmueble inmueble = listaInmuebles.get(i);
                BotonInmueble alojamientoBoton = new BotonInmueble(inmueble);

                alojamientoBoton.setAlignmentX(Component.LEFT_ALIGNMENT); // Alineación izquierda
                alojamientoBoton.setMaximumSize(new Dimension(Integer.MAX_VALUE, alojamientoBoton.getPreferredSize().height)); // Ancho máximo
                add(alojamientoBoton); // Agregar componente al panel
                add(Box.createVerticalStrut(5));
            }
        }
        
        if ("Reservas".equals(tipo)){
            
            ArrayList<Reserva> listaReservas = BaseDatos.reservas;
            
            for (int i = 0; i < listaReservas.size(); i++) {
                Reserva reserva = listaReservas.get(i);
                BotonReservas alojamientoBoton = new BotonReservas(reserva);

                alojamientoBoton.setAlignmentX(Component.LEFT_ALIGNMENT); // Alineación izquierda
                alojamientoBoton.setMaximumSize(new Dimension(Integer.MAX_VALUE, alojamientoBoton.getPreferredSize().height)); // Ancho máximo
                add(alojamientoBoton); // Agregar componente al panel
                add(Box.createVerticalStrut(5));
            }
        }
        
        if ("Particulares".equals(tipo)){
            
            ArrayList<Particular> listaParticulares = BaseDatos.particulares;
            
            for (int i = 0; i < listaParticulares.size(); i++) {
                Particular particular = listaParticulares.get(i);
                BotonParticulares alojamientoBoton = new BotonParticulares(particular);

                alojamientoBoton.setAlignmentX(Component.LEFT_ALIGNMENT); // Alineación izquierda
                alojamientoBoton.setMaximumSize(new Dimension(Integer.MAX_VALUE, alojamientoBoton.getPreferredSize().height)); // Ancho máximo
                add(alojamientoBoton); // Agregar componente al panel
                add(Box.createVerticalStrut(5));
            }
        }
        
        if ("Anfitriones".equals(tipo)){
            
            ArrayList<Anfitrion> listaAnfitriones = BaseDatos.anfitriones;
            
            for (int i = 0; i < listaAnfitriones.size(); i++) {
                Anfitrion anfitrion = listaAnfitriones.get(i);
                BotonAnfitriones alojamientoBoton = new BotonAnfitriones(anfitrion);

                alojamientoBoton.setAlignmentX(Component.LEFT_ALIGNMENT); // Alineación izquierda
                alojamientoBoton.setMaximumSize(new Dimension(Integer.MAX_VALUE, alojamientoBoton.getPreferredSize().height)); // Ancho máximo
                add(alojamientoBoton); // Agregar componente al panel
                add(Box.createVerticalStrut(5));
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
